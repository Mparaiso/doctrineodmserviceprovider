<?php

namespace Document;

use Doctrine\ODM\MongoDB\Mapping\Annotations as ODM;
use Symfony\Component\Security\Core\User\UserInterface;

use Doctrine\Common\Collections\ArrayCollection;

/**
 * @ODM\Document(db="doctrineodm")
 */
class User implements UserInterface
{
    /**
     * @ODM\Id
     */
    protected $id;
    /**
     * @ODM\String
     */
    protected $username;
    /**
     * @ODM\String
     */
    protected $email;
    /**
     * @ODM\String
     */
    protected $password;

    /**
     * @ODM\Salt
     */
    protected $salt;
    /**
     * @ODM\Array
     */
    protected $roles;
    /**
     * @ODM\Date
     */
    protected $createdAt;
    /**
     * @ODM\ReferenceMany(targetDocument="Document\Post", cascade="all")
     */
    protected $posts;

    function __construct()
    {
        $this->posts = new ArrayCollection();
    }

    public function getUsername()
    {
        return $this->username;
    }

    public function setUsername($username)
    {
        $this->username = $username;
    }

    public function getEmail()
    {
        return $this->email;
    }

    public function setEmail($email)
    {
        $this->email = $email;
    }

    public function getPassword()
    {
        return $this->password;
    }

    public function setPassword($password)
    {
        $this->password = $password;
    }

    public function getCreatedAt()
    {
        return $this->createdAt;
    }

    public function setCreatedAt($createdAt)
    {
        $this->createdAt = $createdAt;
    }

    public function getRoles()
    {
        return $this->roles;
    }

    public function setRoles($roles)
    {
        $this->roles = $roles;
    }

    /**
     * {@inheritdoc}
     */
    public function getSalt()
    {
        return $this->salt;
    }

    /**
     * {@inheritdoc}
     */
    public function eraseCredentials()
    {

    }

    public function setSalt($salt)
    {
        $this->salt = $salt;
    }
}
